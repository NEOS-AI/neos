[package]
authors = ["Paul Masurel <paul.masurel@gmail.com>"]
categories = ["database-implementations", "data-structures"]
description = """Search engine library"""
documentation = "https://docs.rs/tantivy/"
edition = "2021"
exclude = ["benches/*.json", "benches/*.txt"]
keywords = ["search", "information", "retrieval"]
license = "AGPL-3.0"
name = "tantivy"
publish = false
readme = "README.md"
version = "0.23.0"

[dependencies]
aho-corasick.workspace = true
arc-swap.workspace = true
async-trait.workspace = true
base64.workspace = true
bitpacking.workspace = true
byteorder.workspace = true
census.workspace = true
crc32fast.workspace = true
crossbeam-channel.workspace = true
downcast-rs.workspace = true
fail = {workspace = true, optional = true}
fastdivide.workspace = true
fnv.workspace = true
fs4 = {workspace = true, optional = true}
fst.workspace = true
futures-util = {workspace = true, optional = true}
htmlescape.workspace = true
itertools.workspace = true
lending-iter.workspace = true
levenshtein_automata.workspace = true
log.workspace = true
lru.workspace = true
lz4_flex = {workspace = true, optional = true}
measure_time.workspace = true
memmap2 = {workspace = true, optional = true}
murmurhash32.workspace = true
nom.workspace = true
oneshot.workspace = true
ownedbytes.workspace = true
rayon.workspace = true
regex.workspace = true
rust-stemmers.workspace = true
rustc-hash.workspace = true
serde.workspace = true
serde_json.workspace = true
smallvec.workspace = true
strum.workspace = true
tempfile = {workspace = true, optional = true}
thiserror.workspace = true
time.workspace = true
uuid.workspace = true
zstd.workspace = true

[dev-dependencies]
binggan.workspace = true
fail.workspace = true
futures.workspace = true
maplit.workspace = true
matches.workspace = true
more-asserts.workspace = true
paste.workspace = true
postcard.workspace = true
pretty_assertions.workspace = true
proptest.workspace = true
rand.workspace = true
rand_distr.workspace = true
time.workspace = true
zipf.workspace = true

[features]
default = ["mmap", "stopwords", "lz4-compression"]
mmap = ["fs4", "tempfile", "memmap2"]
stopwords = []

lz4-compression = ["lz4_flex"]

failpoints = ["fail", "fail/failpoints"]

# Following the "fail" crate best practises, we isolate
# tests that define specific behavior in fail check points
# in a different binary.
#
# We do that because, fail rely on a global definition of
# failpoints behavior and hence, it is incompatible with
# multithreading.
[[test]]
name = "failpoints"
path = "tests/failpoints/mod.rs"
required-features = ["failpoints"]
