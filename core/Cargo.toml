[package]
authors = ['YeonwooSung <neos960518@gmail.com>']
default-run = "neos"
edition = "2021"
license = "AGPL-3.0"
name = "neos"
publish = false
version = "0.1.0"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
cors = []
default = ["cors", "dev"]
dev = ["cors"]
return_body = []

[[bin]]
name = "neos"
path = "src/main.rs"

[dependencies]
ahash.workspace = true
anyhow.workspace = true
async-stream.workspace = true
axum-macros.workspace = true
axum.workspace = true
base64.workspace = true
bincode.workspace = true
bitflags.workspace = true
bitvec.workspace = true
bloom = { path = "../crates/bloom" }
simple_wal = { path = "../crates/simple-wal" }
bytecount.workspace = true
bytemuck.workspace = true
candle-core.workspace = true
candle-nn.workspace = true
candle-transformers.workspace = true
chardetng.workspace = true
chitchat.workspace = true
chrono.workspace = true
clap.workspace = true
common.workspace = true
crossbeam-channel.workspace = true
csv.workspace = true
dashmap.workspace = true
deadpool.workspace = true
dirs.workspace = true
encoding_rs.workspace = true
enum_dispatch.workspace = true
fend-core.workspace = true
file_store = { path = "../crates/file-store" }
flate2.workspace = true
fnv.workspace = true
fst.workspace = true
futures.workspace = true
hashbrown.workspace = true
http.workspace = true
image.workspace = true
indicatif.workspace = true
itertools.workspace = true
kuchiki = { path = "../crates/kuchiki" }
lending-iter.workspace = true
log.workspace = true
logos.workspace = true
lz4_flex.workspace = true
md5.workspace = true
memmap2.workspace = true
mime.workspace = true
min-max-heap.workspace = true
nom.workspace = true
num-bigint.workspace = true
num-rational.workspace = true
openraft.workspace = true
optics = { path = "../crates/optics" }
percent-encoding.workspace = true
postcard.workspace = true
publicsuffix.workspace = true
quick-xml.workspace = true
rand.workspace = true
rayon.workspace = true
redb.workspace = true
regex.workspace = true
reqwest.workspace = true
ring.workspace = true
rio_api.workspace = true
rio_turtle.workspace = true
robotstxt = { path = "../crates/robotstxt" }
rust-s3.workspace = true
rust-stemmers.workspace = true
rustc-hash.workspace = true
scylla.workspace = true
serde.workspace = true
serde_json.workspace = true
speedy_kv = { path = "../crates/speedy-kv" }
strum.workspace = true
tantivy.workspace = true
thiserror.workspace = true
tokenizers.workspace = true
tokio-stream.workspace = true
tokio.workspace = true
toml.workspace = true
tower-http.workspace = true
tower.workspace = true
tracing-subscriber.workspace = true
tracing.workspace = true
unicode-normalization.workspace = true
unicode-segmentation.workspace = true
url.workspace = true
utoipa-swagger-ui.workspace = true
utoipa.workspace = true
uuid.workspace = true
whatlang.workspace = true
zimba = { path = "../crates/zimba" }

[target.'cfg(not(target_env = "msvc"))'.dependencies]
tikv-jemallocator.workspace = true

[dev-dependencies]
criterion.workspace = true
insta.workspace = true
maplit.workspace = true
proptest-derive.workspace = true
proptest.workspace = true
tracing-test.workspace = true

[[bench]]
harness = false
name = "harmonic_centrality"

[[bench]]
harness = false
name = "hyperloglog"

[[bench]]
harness = false
name = "naive_bayes"

[[bench]]
harness = false
name = "bitvec_similarity"

[[example]]
name = "search_preindexed"

[[example]]
name = "bitvec_similarity"

[[example]]
name = "indexer"

[[example]]
name = "distributed_harmonic"
